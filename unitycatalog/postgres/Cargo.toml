[package]
name = "unitycatalog-postgres"
edition.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
readme.workspace = true
version.workspace = true
rust-version.workspace = true

[dependencies]
# path dependencies (in alphabetical order)
unitycatalog-common = { path = "../common", default-features = false }
unitycatalog-derive = { path = "../derive" }

# workspace dependencies (in alphabetical order)
async-trait = { workspace = true }
bytes = { workspace = true }
chrono = { workspace = true }
itertools = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true, features = ["raw_value", "preserve_order"] }
thiserror = { workspace = true }
tracing = { workspace = true }
url = { workspace = true }

# crates.io dependencies (in alphabetical order)
base64 = "0.22"
# deadpool = { version = "0.12.2", features = ["managed"] }
deadpool-postgres = { version = "0.14.1", features = ["rt_tokio_1"] }
paste = "1.0"
sqlx = { workspace = true, features = [
  "postgres",
  "chrono",
  "uuid",
  "json",
  "runtime-tokio-rustls",
  "migrate",
  "macros",
] }
tokio-postgres = { version = "0.7.13", features = [
  "with-uuid-1",
  "runtime",
  "array-impls",
  "with-serde_json-1",
  "with-chrono-0_4",
] }
uuid = { version = "1.8", features = ["serde"] }

[dev-dependencies]
tokio = { version = "1", features = ["rt-multi-thread", "parking_lot"] }
unitycatalog-common = { path = "../common", default-features = false, features = [
  "sqlx",
  "axum",
] }

[features]
default = ["sqlx", "tokio-pg"]
# feature flags for integration tests
# running integration tests requires a running PostgreSQL instance
# and DATABASE_URL environment variable set
integration-pg = [
  "unitycatalog-common/integration",
  "unitycatalog-common/memory",
]
sqlx = ["unitycatalog-common/sqlx"]
tokio-pg = ["unitycatalog-common/tokio-pg"]
